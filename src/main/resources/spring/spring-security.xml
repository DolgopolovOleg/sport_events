<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:property-placeholder location="classpath:spring-social.properties"/>

    <http pattern="/images/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/css/**" security="none" />

    <http auto-config="true"
          use-expressions="true"
          access-denied-page="/access_denied.jsp">
        <csrf />
        <form-login
                    login-processing-url="/authentication"
                    login-page="/login"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/"
                    always-use-default-target="true"
                    authentication-failure-url="/login?error=invalidLogin" />

        <intercept-url pattern="/users" access="isAuthenticated()"/>

        <logout logout-url="/logout" logout-success-url="/login" delete-cookies="JSESSIONID"/>

        <remember-me user-service-ref="userService" key="lesson_key" />

        <custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER" />
    </http>

    <beans:bean id="authUserDetailsService" class="com.myapp.service.impl.UserServiceImpl" />

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordHelper" />
        </authentication-provider>

        <authentication-provider ref="socialAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value="" />
    </beans:bean>

    <!--<beans:bean id="usersConnectionRepository" class="com.myapp.service.impl.UserServiceImpl">-->
    <!--</beans:bean>-->

    <!--
        Configures the social authentication filter which integrates Spring Social
        with Spring Security.
    -->
    <beans:bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
        <beans:constructor-arg index="0" ref="authenticationManager"/>
        <beans:constructor-arg index="1" ref="userIdSource"/>
        <beans:constructor-arg index="2" ref="usersConnectionRepository"/>
        <beans:constructor-arg index="3" ref="connectionFactoryLocator"/>

        <!-- Sets the url of the registration form. -->
        <beans:property name="signupUrl" value="/user/register"/>
        <beans:property name="postLoginUrl" value="/signin"/>
        <beans:property name="connectionAddedRedirectUrl" value="/connectionAddedRedirectUrl"/>

        <!--<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />-->
        <!--<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>-->
    </beans:bean>

    <beans:bean id="authenticationSuccessHandler" class="com.myapp.registration.CustomSuccessHandler"/>
    <beans:bean id="authenticationFailureHandler" class="com.myapp.registration.CustomFailureHandler"/>

    <beans:bean id="connectionsFactoryLocator"
          class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
        <beans:property name="connectionFactories">
            <beans:list>
                <beans:bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
                    <beans:constructor-arg value="${facebook.app.id}" />
                    <beans:constructor-arg value="${facebook.app.secret}" />
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="connectController"
          class="com.myapp.controller.SocialController">
        <beans:constructor-arg name="connectionRepository" ref="connectionRepository" />
        <beans:constructor-arg name="connectionFactoryLocator" ref="connectionsFactoryLocator" />
    </beans:bean>

    <!--
        Configures the social authentication provider which processes authentication requests
        made by using supported social authentication services (FB, Twitter and so on).
    -->
    <beans:bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">
        <beans:constructor-arg index="0" ref="usersConnectionRepository"/>
        <beans:constructor-arg index="1" ref="socialUserDetailsService"/>
    </beans:bean>

    <beans:bean id="usersConnectionRepository" class="com.myapp.service.impl.UserConnectionServiceImpl"/>

    <beans:bean id="connectionRepository"
                factory-method="createConnectionRepository"
                factory-bean="usersConnectionRepository"
                scope="request">
        <beans:constructor-arg value="#{request.userPrincipal.name}"/>
        <aop:scoped-proxy proxy-target-class="false"/>
    </beans:bean>

    <!--
        This bean is used to load the user specific data when social sign in
        is used.
    -->
    <beans:bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText" />

    <beans:bean id="socialUserDetailsService" class="com.myapp.service.impl.SimpleSocialUserDetailsService">
    </beans:bean>

    <!-- This bean is load the user specific data when form login is used. -->
    <beans:bean id="userDetailsService" class="com.myapp.service.impl.RepositoryUserDetailsService"/>

    <!--
        This bean determines the account ID of the user. The example application
        uses the username as the account ID.
    -->
    <beans:bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"/>
    <!--<beans:bean id="userIdSource" class="com.myapp.registration.AuthenticationNameUserIdSource"/>-->

</beans:beans>